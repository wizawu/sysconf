---
- hosts: localhost
  remote_user: root

  tasks:
  - name: update ansible config
    lineinfile:
      dest: /etc/ansible/ansible.cfg
      regexp: "{{item.regexp}}"
      line: "{{item.line}}"
      insertafter: '^\[default\]'
    with_items:
    - { regexp: '^callback_whitelist\s{0,}=', line: 'callback_whitelist = profile_tasks' }
    - { regexp: '^retry_files_enabled\s{0,}=', line: 'retry_files_enabled = False' }

  - name: create user
    user: name={{user}} state=present group=root shell=/bin/bash

  - name: clone repo
    git: repo=git@github.com:wizawu/sysconf.git dest=/home/{{user}}/.sysconf force=yes
    become: true
    become_user: "{{user}}"

  - name: locale-gen
    locale_gen: name={{item}} state=present
    with_items:
    - en_US.UTF-8
    - zh_CN
    - zh_CN.GB18030
    - zh_CN.GBK
    - zh_CN.UTF-8

  - name: create symbolic link to apt sources.list
    file: src=/home/{{user}}/.sysconf/{{item}} dest=/{{item}} state=link force=yes
    with_items:
    - etc/apt/sources.list

  - name: add apt keys
    apt_key: keyserver=keyserver.ubuntu.com id={{item}}
    with_items:
    - 1397BC53640DB551      # chrome
    - 1655A0AB68576280      # node
    - 7638D0442B90D010      # debian
    - EB3E94ADBE1229CF      # vscode
    - F1656F24C74CD1D8      # mariadb

  - name: install apt packages
    apt: name={{item}} update_cache=yes install_recommends=no autoclean=yes
    with_items:
    - ack-grep
    - alsa-oss
    - alsa-tools
    - alsa-utils
    - apache2-utils
    - autossh
    - awesome
    - awesome-extra
    - caja
    - cifs-utils
    - clang-format
    - cmake
    - code
    - colortail
    - debootstrap
    - deepin-screenshot
    - di
    - dnsutils
    - dstat
    - entr
    - fcitx
    - fcitx-googlepinyin
    - fcitx-ui-classic
    - fio
    - firefox
    - fiu-utils
    - fontforge
    - fping
    - g++
    - gcc-doc
    - gimp
    - google-chrome-stable
    - google-perftools
    - gradle
    - gufw
    - hdparm
    - hsetroot
    - htop
    - httpie
    - httrack
    - iftop
    - inkscape
    - iotop
    - lftp
    - libreoffice
    - linux-headers-amd64
    - linux-image-amd64
    - lm-sensors
    - locate
    - lshw
    - lsof
    - make
    - manpages-dev
    - mate-desktop-environment-core
    - mate-utils
    - mtr
    - mupdf
    - mycli
    - netcat
    - nginx
    - nmap
    - nodejs
    - ntfs-3g
    - ntpdate
    - openjdk-10-jdk
    - p7zip-full
    - parallel
    - pluma
    - pm-utils
    - pppoeconf
    - psmisc
    - python3.7
    - qbittorrent
    - redis-server
    - rinetd
    - rlwrap
    - rsync
    - rxvt-unicode-256color
    - samba
    - smbclient
    - smplayer
    - ssh
    - sshfs
    - sshpass
    - strace
    - sudo
    - supervisor
    - sysbench
    - syslog-ng
    - sysstat
    - systemd-sysv
    - tcpdump
    - time
    - tlp
    - tlp-rdw
    - tmux
    - tree
    - tsocks
    - unrar
    - unzip
    - valgrind
    - viewnior
    - vifm
    - vim-gtk
    - vsftpd
    - wicd-gtk
    - wpasupplicant
    - wput
    - wrk
    - x11-xkb-utils
    - x11-xserver-utils
    - xclip
    - xdg-user-dirs
    - xserver-xorg-input-synaptics
    - xorg
    - xsel
    - yapf

  - name: check built-in tools
    shell: command -v {{item}}
    with_items:
    - getconf
    - ipcs
    - losetup
    - lscpu
    - lsusb
    - perf
    - pmap
    - trap

  - name: remove apt packages
    apt: name={{item}} state=absent autoremove=yes purge=yes
    with_items:
    - fcitx-module-dbus
    - fcitx-ui-light
    - gnome-keyring
    - lightdm
    - mate-user-guide
    - mate-utils
    - mate-utils-common
    - xscreensaver

  - name: install npm packages
    shell: "{{item}}"
    with_items:
    - "npm -g install yarn"

  - name: download pt-summary
    get_url: url=http://percona.com/get/pt-summary dest=/usr/bin/pt-summary mode=0755

  - name: create etc directories
    file: dest=/{{item}} state=directory recurse=yes
    with_items:
    - etc/X11/xorg.conf.d
    - etc/fonts/conf.d
    - etc/security/limits.d
    - etc/sysctl.d
    - etc/xdg/awesome

  - name: create symbolic link to global config
    file: src=/home/{{user}}/.sysconf/{{item}} dest=/{{item}} state=link force=yes
    with_items:
    - etc/X11/xorg.conf.d/99-synaptics.conf
    - etc/fonts/conf.d/99-default.conf
    - etc/rc.local
    - etc/sysctl.d/99-default.conf
    - etc/xdg/awesome/rc.lua

  - name: create template config
    template: src={{item}}.tpl dest=/{{item}} mode=0440
    with_items:
    - etc/security/limits.d/default.conf
    - etc/sudoers.d/default

  - name: update tsocks config
    lineinfile:
      dest: /etc/tsocks.conf
      regexp: '^server\s{0,}='
      line: 'server = 127.0.0.1'

  - name: update systemd logind.conf
    lineinfile:
      dest: /etc/systemd/logind.conf
      regexp: '^{{item.key}}\s{0,}='
      line: '{{item.key}}={{item.value}}'
    with_items:
    - { key: "HandleLidSwitch", value: "ignore" }
    - { key: "HandlePowerKey", value: "suspend" }

  - name: create user directories
    file: dest=/home/{{user}}/{{item}} state=directory recurse=yes owner={{user}}
    with_items:
    - .config/Code/User
    - .mozilla/firefox/d5dwqmpw.default/chrome
    - .mozilla/plugins
    - .ssh

  - name: create symbolic link to user config
    file: src=/home/{{user}}/.sysconf/dotfiles/{{item}} dest=/home/{{user}}/.{{item}} state=link force=yes owner={{user}}
    with_items:
    - Xdefaults
    - bashrc
    - config/Code/User/keybindings.json
    - config/Code/User/settings.json
    - gitconfig
    - mozilla/firefox/d5dwqmpw.default/chrome/userChrome.css
    - mozilla/firefox/d5dwqmpw.default/chrome/userContent.css
    - ssh/config
    - tmux.conf
    - vimrc
    - xinitrc

  - name: download libflashplayer.so
    get_url:
      url: https://github.com/wizawu/sysconf/releases/download/libflashplayer/libflashplayer.so
      dest: /home/{{user}}/.mozilla/plugins/libflashplayer.so
